
task1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000162  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005a1  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000513  00000000  00000000  00000791  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001f7  00000000  00000000  00000ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000e9c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002a6  00000000  00000000  00000ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000027  00000000  00000000  00001166  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000118d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 85 00 	jmp	0x10a	; 0x10a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <util/delay.h>


int main(void)
{
    ddra|=(1<<0);
  6c:	8a b3       	in	r24, 0x1a	; 26
  6e:	9b b3       	in	r25, 0x1b	; 27
	ddra|=(1<<1);
  70:	83 60       	ori	r24, 0x03	; 3
  72:	9b bb       	out	0x1b, r25	; 27
  74:	8a bb       	out	0x1a, r24	; 26
	porta&=~(1<<0);
  76:	8b b3       	in	r24, 0x1b	; 27
  78:	9c b3       	in	r25, 0x1c	; 28
	porta&=~(1<<1);
  7a:	8c 7f       	andi	r24, 0xFC	; 252
  7c:	9c bb       	out	0x1c, r25	; 28
  7e:	8b bb       	out	0x1b, r24	; 27
		ddrb&=~(1<<0);
  80:	87 b3       	in	r24, 0x17	; 23
  82:	98 b3       	in	r25, 0x18	; 24
	ddrb&=~(1<<1);
		ddrb&=~(1<<2);
  84:	88 7f       	andi	r24, 0xF8	; 248
  86:	98 bb       	out	0x18, r25	; 24
  88:	87 bb       	out	0x17, r24	; 23
		portb|=(1<<0);
  8a:	88 b3       	in	r24, 0x18	; 24
  8c:	99 b3       	in	r25, 0x19	; 25
		portb|=(1<<1);
		portb|=(1<<2);
  8e:	87 60       	ori	r24, 0x07	; 7
  90:	99 bb       	out	0x19, r25	; 25
  92:	88 bb       	out	0x18, r24	; 24
    while (1) 
    {
		porta&=~(1<<0);
  94:	8b b3       	in	r24, 0x1b	; 27
  96:	9c b3       	in	r25, 0x1c	; 28
		porta&=~(1<<1);
  98:	8c 7f       	andi	r24, 0xFC	; 252
  9a:	9c bb       	out	0x1c, r25	; 28
  9c:	8b bb       	out	0x1b, r24	; 27
		u8 sw1=((pinb>>0)&1),sw2=((pinb>>1)&1),sw3=((pinb>>2)&1);
  9e:	46 b3       	in	r20, 0x16	; 22
  a0:	57 b3       	in	r21, 0x17	; 23
  a2:	66 b3       	in	r22, 0x16	; 22
  a4:	77 b3       	in	r23, 0x17	; 23
  a6:	61 fb       	bst	r22, 1
  a8:	22 27       	eor	r18, r18
  aa:	20 f9       	bld	r18, 0
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	66 b3       	in	r22, 0x16	; 22
  b0:	77 b3       	in	r23, 0x17	; 23
  b2:	62 fb       	bst	r22, 2
  b4:	ee 27       	eor	r30, r30
  b6:	e0 f9       	bld	r30, 0
  b8:	f0 e0       	ldi	r31, 0x00	; 0
		if(sw1==0&&sw2==1&&sw3==1){
  ba:	ba 01       	movw	r22, r20
  bc:	61 70       	andi	r22, 0x01	; 1
  be:	77 27       	eor	r23, r23
  c0:	40 fd       	sbrc	r20, 0
  c2:	0a c0       	rjmp	.+20     	; 0xd8 <main+0x6c>
  c4:	21 30       	cpi	r18, 0x01	; 1
  c6:	31 05       	cpc	r19, r1
  c8:	39 f4       	brne	.+14     	; 0xd8 <main+0x6c>
  ca:	e1 30       	cpi	r30, 0x01	; 1
  cc:	f1 05       	cpc	r31, r1
  ce:	21 f4       	brne	.+8      	; 0xd8 <main+0x6c>
			porta|=(1<<0);
			porta&=~(1<<1);
  d0:	81 60       	ori	r24, 0x01	; 1
  d2:	9c bb       	out	0x1c, r25	; 28
  d4:	8b bb       	out	0x1b, r24	; 27
  d6:	de cf       	rjmp	.-68     	; 0x94 <main+0x28>
    }
	else if(sw1==1&&sw2==0&&sw3==1){
  d8:	61 30       	cpi	r22, 0x01	; 1
  da:	71 05       	cpc	r23, r1
  dc:	51 f4       	brne	.+20     	; 0xf2 <main+0x86>
  de:	21 15       	cp	r18, r1
  e0:	31 05       	cpc	r19, r1
  e2:	39 f4       	brne	.+14     	; 0xf2 <main+0x86>
  e4:	e1 30       	cpi	r30, 0x01	; 1
  e6:	f1 05       	cpc	r31, r1
  e8:	21 f4       	brne	.+8      	; 0xf2 <main+0x86>
		porta|=(1<<1);
		porta&=~(1<<0);
  ea:	82 60       	ori	r24, 0x02	; 2
  ec:	9c bb       	out	0x1c, r25	; 28
  ee:	8b bb       	out	0x1b, r24	; 27
  f0:	d1 cf       	rjmp	.-94     	; 0x94 <main+0x28>
	}
	else if(sw1==1&&sw2==1&&sw3==0){
  f2:	61 30       	cpi	r22, 0x01	; 1
  f4:	71 05       	cpc	r23, r1
  f6:	71 f6       	brne	.-100    	; 0x94 <main+0x28>
  f8:	21 30       	cpi	r18, 0x01	; 1
  fa:	31 05       	cpc	r19, r1
  fc:	59 f6       	brne	.-106    	; 0x94 <main+0x28>
  fe:	ef 2b       	or	r30, r31
 100:	49 f6       	brne	.-110    	; 0x94 <main+0x28>
			porta|=(1<<1);
			porta|=(1<<0);
 102:	83 60       	ori	r24, 0x03	; 3
 104:	9c bb       	out	0x1c, r25	; 28
 106:	8b bb       	out	0x1b, r24	; 27
 108:	c5 cf       	rjmp	.-118    	; 0x94 <main+0x28>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>
