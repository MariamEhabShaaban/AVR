
switch_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009a0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b64  00000000  00000000  000009f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000004e7  00000000  00000000  00001558  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 a0 04 	call	0x940	; 0x940 <main>
  64:	0c 94 ce 04 	jmp	0x99c	; 0x99c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_enuint>:
#include "errorStates.h"
#include "DIO_int.h"
#include "DIO_priv.h"
#include "DIO_config.h"

ES_t DIO_enuint (void){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	0f 92       	push	r0
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62
	ES_t local_enuerror=ES_NOK;
  76:	19 82       	std	Y+1, r1	; 0x01
	DDRA =CONC( PA_PIN7_DIR	, PA_PIN6_DIR, PA_PIN5_DIR	, PA_PIN4_DIR, PA_PIN3_DIR, PA_PIN2_DIR, PA_PIN1_DIR, PA_PIN0_DIR);
  78:	ea e3       	ldi	r30, 0x3A	; 58
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	8f ef       	ldi	r24, 0xFF	; 255
  7e:	80 83       	st	Z, r24
	DDRB =CONC( PB_PIN7_DIR	, PB_PIN6_DIR, PB_PIN5_DIR	, PB_PIN4_DIR, PB_PIN3_DIR, PB_PIN2_DIR, PB_PIN1_DIR, PB_PIN0_DIR);
  80:	e7 e3       	ldi	r30, 0x37	; 55
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	8e ef       	ldi	r24, 0xFE	; 254
  86:	80 83       	st	Z, r24
	DDRC =CONC( PC_PIN7_DIR	, PC_PIN6_DIR, PC_PIN5_DIR	, PC_PIN4_DIR, PC_PIN3_DIR, PC_PIN2_DIR, PC_PIN1_DIR, PC_PIN0_DIR);
  88:	e4 e3       	ldi	r30, 0x34	; 52
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	86 e9       	ldi	r24, 0x96	; 150
  8e:	80 83       	st	Z, r24
	DDRD =CONC( PD_PIN7_DIR	, PD_PIN6_DIR, PD_PIN5_DIR	, PD_PIN4_DIR, PD_PIN3_DIR, PD_PIN2_DIR, PD_PIN1_DIR, PD_PIN0_DIR);
  90:	e1 e3       	ldi	r30, 0x31	; 49
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	86 e9       	ldi	r24, 0x96	; 150
  96:	80 83       	st	Z, r24
	PORTA =CONC(PA_PIN7_VAL,PA_PIN6_VAL,PA_PIN5_VAL,PA_PIN4_VAL,PA_PIN3_VAL,PA_PIN2_VAL,PA_PIN1_VAL,PA_PIN0_VAL);
  98:	eb e3       	ldi	r30, 0x3B	; 59
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	10 82       	st	Z, r1
	PORTB =CONC(PB_PIN7_VAL,PB_PIN6_VAL,PB_PIN5_VAL,PB_PIN4_VAL,PB_PIN3_VAL,PB_PIN2_VAL,PB_PIN1_VAL,PB_PIN0_VAL);
  9e:	e8 e3       	ldi	r30, 0x38	; 56
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	10 82       	st	Z, r1

	local_enuerror=ES_OK;
  a4:	81 e0       	ldi	r24, 0x01	; 1
  a6:	89 83       	std	Y+1, r24	; 0x01


return local_enuerror;
  a8:	89 81       	ldd	r24, Y+1	; 0x01
}
  aa:	0f 90       	pop	r0
  ac:	cf 91       	pop	r28
  ae:	df 91       	pop	r29
  b0:	08 95       	ret

000000b2 <DIO_enuSetPortDirection>:

ES_t DIO_enuSetPortDirection(u8 Copy_u8PortID , u8 Copy_u8Value){
  b2:	df 93       	push	r29
  b4:	cf 93       	push	r28
  b6:	00 d0       	rcall	.+0      	; 0xb8 <DIO_enuSetPortDirection+0x6>
  b8:	00 d0       	rcall	.+0      	; 0xba <DIO_enuSetPortDirection+0x8>
  ba:	0f 92       	push	r0
  bc:	cd b7       	in	r28, 0x3d	; 61
  be:	de b7       	in	r29, 0x3e	; 62
  c0:	8a 83       	std	Y+2, r24	; 0x02
  c2:	6b 83       	std	Y+3, r22	; 0x03
	ES_t local_enuerror=ES_NOK;
  c4:	19 82       	std	Y+1, r1	; 0x01
	if( Copy_u8PortID<=D_u8PORTD){
  c6:	8a 81       	ldd	r24, Y+2	; 0x02
  c8:	84 30       	cpi	r24, 0x04	; 4
  ca:	a0 f5       	brcc	.+104    	; 0x134 <DIO_enuSetPortDirection+0x82>

		 local_enuerror=ES_OK;
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	89 83       	std	Y+1, r24	; 0x01
		 switch(Copy_u8PortID){
  d0:	8a 81       	ldd	r24, Y+2	; 0x02
  d2:	28 2f       	mov	r18, r24
  d4:	30 e0       	ldi	r19, 0x00	; 0
  d6:	3d 83       	std	Y+5, r19	; 0x05
  d8:	2c 83       	std	Y+4, r18	; 0x04
  da:	8c 81       	ldd	r24, Y+4	; 0x04
  dc:	9d 81       	ldd	r25, Y+5	; 0x05
  de:	81 30       	cpi	r24, 0x01	; 1
  e0:	91 05       	cpc	r25, r1
  e2:	d1 f0       	breq	.+52     	; 0x118 <DIO_enuSetPortDirection+0x66>
  e4:	2c 81       	ldd	r18, Y+4	; 0x04
  e6:	3d 81       	ldd	r19, Y+5	; 0x05
  e8:	22 30       	cpi	r18, 0x02	; 2
  ea:	31 05       	cpc	r19, r1
  ec:	2c f4       	brge	.+10     	; 0xf8 <DIO_enuSetPortDirection+0x46>
  ee:	8c 81       	ldd	r24, Y+4	; 0x04
  f0:	9d 81       	ldd	r25, Y+5	; 0x05
  f2:	00 97       	sbiw	r24, 0x00	; 0
  f4:	61 f0       	breq	.+24     	; 0x10e <DIO_enuSetPortDirection+0x5c>
  f6:	1e c0       	rjmp	.+60     	; 0x134 <DIO_enuSetPortDirection+0x82>
  f8:	2c 81       	ldd	r18, Y+4	; 0x04
  fa:	3d 81       	ldd	r19, Y+5	; 0x05
  fc:	22 30       	cpi	r18, 0x02	; 2
  fe:	31 05       	cpc	r19, r1
 100:	81 f0       	breq	.+32     	; 0x122 <DIO_enuSetPortDirection+0x70>
 102:	8c 81       	ldd	r24, Y+4	; 0x04
 104:	9d 81       	ldd	r25, Y+5	; 0x05
 106:	83 30       	cpi	r24, 0x03	; 3
 108:	91 05       	cpc	r25, r1
 10a:	81 f0       	breq	.+32     	; 0x12c <DIO_enuSetPortDirection+0x7a>
 10c:	13 c0       	rjmp	.+38     	; 0x134 <DIO_enuSetPortDirection+0x82>
		 case D_u8PORTA:
			 DDRA=Copy_u8Value;
 10e:	ea e3       	ldi	r30, 0x3A	; 58
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	8b 81       	ldd	r24, Y+3	; 0x03
 114:	80 83       	st	Z, r24
 116:	0e c0       	rjmp	.+28     	; 0x134 <DIO_enuSetPortDirection+0x82>
			 break;
		 case D_u8PORTB:
					 DDRB=Copy_u8Value;
 118:	e7 e3       	ldi	r30, 0x37	; 55
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	8b 81       	ldd	r24, Y+3	; 0x03
 11e:	80 83       	st	Z, r24
 120:	09 c0       	rjmp	.+18     	; 0x134 <DIO_enuSetPortDirection+0x82>
					 break;
		 case D_u8PORTC:
					 DDRC=Copy_u8Value;
 122:	e4 e3       	ldi	r30, 0x34	; 52
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	8b 81       	ldd	r24, Y+3	; 0x03
 128:	80 83       	st	Z, r24
 12a:	04 c0       	rjmp	.+8      	; 0x134 <DIO_enuSetPortDirection+0x82>
					 break;
		 case D_u8PORTD:
					 DDRD=Copy_u8Value;
 12c:	e1 e3       	ldi	r30, 0x31	; 49
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	8b 81       	ldd	r24, Y+3	; 0x03
 132:	80 83       	st	Z, r24


		 }

	}
	return local_enuerror;
 134:	89 81       	ldd	r24, Y+1	; 0x01
}
 136:	0f 90       	pop	r0
 138:	0f 90       	pop	r0
 13a:	0f 90       	pop	r0
 13c:	0f 90       	pop	r0
 13e:	0f 90       	pop	r0
 140:	cf 91       	pop	r28
 142:	df 91       	pop	r29
 144:	08 95       	ret

00000146 <DIO_enuSetPortValue>:

ES_t DIO_enuSetPortValue(u8 Copy_u8PortID , u8 Copy_u8Value){
 146:	df 93       	push	r29
 148:	cf 93       	push	r28
 14a:	00 d0       	rcall	.+0      	; 0x14c <DIO_enuSetPortValue+0x6>
 14c:	00 d0       	rcall	.+0      	; 0x14e <DIO_enuSetPortValue+0x8>
 14e:	0f 92       	push	r0
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
 154:	8a 83       	std	Y+2, r24	; 0x02
 156:	6b 83       	std	Y+3, r22	; 0x03

	ES_t local_enuerror=ES_NOK;
 158:	19 82       	std	Y+1, r1	; 0x01
		if( Copy_u8PortID<=D_u8PORTD){
 15a:	8a 81       	ldd	r24, Y+2	; 0x02
 15c:	84 30       	cpi	r24, 0x04	; 4
 15e:	a8 f5       	brcc	.+106    	; 0x1ca <DIO_enuSetPortValue+0x84>

			 local_enuerror=ES_OK;
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	89 83       	std	Y+1, r24	; 0x01
			 switch(Copy_u8PortID){
 164:	8a 81       	ldd	r24, Y+2	; 0x02
 166:	28 2f       	mov	r18, r24
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	3d 83       	std	Y+5, r19	; 0x05
 16c:	2c 83       	std	Y+4, r18	; 0x04
 16e:	8c 81       	ldd	r24, Y+4	; 0x04
 170:	9d 81       	ldd	r25, Y+5	; 0x05
 172:	81 30       	cpi	r24, 0x01	; 1
 174:	91 05       	cpc	r25, r1
 176:	d1 f0       	breq	.+52     	; 0x1ac <DIO_enuSetPortValue+0x66>
 178:	2c 81       	ldd	r18, Y+4	; 0x04
 17a:	3d 81       	ldd	r19, Y+5	; 0x05
 17c:	22 30       	cpi	r18, 0x02	; 2
 17e:	31 05       	cpc	r19, r1
 180:	2c f4       	brge	.+10     	; 0x18c <DIO_enuSetPortValue+0x46>
 182:	8c 81       	ldd	r24, Y+4	; 0x04
 184:	9d 81       	ldd	r25, Y+5	; 0x05
 186:	00 97       	sbiw	r24, 0x00	; 0
 188:	61 f0       	breq	.+24     	; 0x1a2 <DIO_enuSetPortValue+0x5c>
 18a:	21 c0       	rjmp	.+66     	; 0x1ce <DIO_enuSetPortValue+0x88>
 18c:	2c 81       	ldd	r18, Y+4	; 0x04
 18e:	3d 81       	ldd	r19, Y+5	; 0x05
 190:	22 30       	cpi	r18, 0x02	; 2
 192:	31 05       	cpc	r19, r1
 194:	81 f0       	breq	.+32     	; 0x1b6 <DIO_enuSetPortValue+0x70>
 196:	8c 81       	ldd	r24, Y+4	; 0x04
 198:	9d 81       	ldd	r25, Y+5	; 0x05
 19a:	83 30       	cpi	r24, 0x03	; 3
 19c:	91 05       	cpc	r25, r1
 19e:	81 f0       	breq	.+32     	; 0x1c0 <DIO_enuSetPortValue+0x7a>
 1a0:	16 c0       	rjmp	.+44     	; 0x1ce <DIO_enuSetPortValue+0x88>
			 case D_u8PORTA:
				 PORTA=Copy_u8Value;
 1a2:	eb e3       	ldi	r30, 0x3B	; 59
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	8b 81       	ldd	r24, Y+3	; 0x03
 1a8:	80 83       	st	Z, r24
 1aa:	11 c0       	rjmp	.+34     	; 0x1ce <DIO_enuSetPortValue+0x88>
				 break;
			 case D_u8PORTB:
				 PORTB=Copy_u8Value;
 1ac:	e8 e3       	ldi	r30, 0x38	; 56
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	8b 81       	ldd	r24, Y+3	; 0x03
 1b2:	80 83       	st	Z, r24
 1b4:	0c c0       	rjmp	.+24     	; 0x1ce <DIO_enuSetPortValue+0x88>
						 break;
			 case D_u8PORTC:
				 PORTC=Copy_u8Value;
 1b6:	e5 e3       	ldi	r30, 0x35	; 53
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	8b 81       	ldd	r24, Y+3	; 0x03
 1bc:	80 83       	st	Z, r24
 1be:	07 c0       	rjmp	.+14     	; 0x1ce <DIO_enuSetPortValue+0x88>
						 break;
			 case D_u8PORTD:
			 PORTD=Copy_u8Value;
 1c0:	e2 e3       	ldi	r30, 0x32	; 50
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	8b 81       	ldd	r24, Y+3	; 0x03
 1c6:	80 83       	st	Z, r24
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_enuSetPortValue+0x88>
			 }

		}
		else
			{
			local_enuerror = ES_OUT_OF_RANGE;
 1ca:	83 e0       	ldi	r24, 0x03	; 3
 1cc:	89 83       	std	Y+1, r24	; 0x01
			}
		return local_enuerror;
 1ce:	89 81       	ldd	r24, Y+1	; 0x01
}
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	0f 90       	pop	r0
 1d8:	0f 90       	pop	r0
 1da:	cf 91       	pop	r28
 1dc:	df 91       	pop	r29
 1de:	08 95       	ret

000001e0 <DIO_enuTogPortValue>:

ES_t DIO_enuTogPortValue(u8 Copy_u8PortID){
 1e0:	df 93       	push	r29
 1e2:	cf 93       	push	r28
 1e4:	00 d0       	rcall	.+0      	; 0x1e6 <DIO_enuTogPortValue+0x6>
 1e6:	00 d0       	rcall	.+0      	; 0x1e8 <DIO_enuTogPortValue+0x8>
 1e8:	cd b7       	in	r28, 0x3d	; 61
 1ea:	de b7       	in	r29, 0x3e	; 62
 1ec:	8a 83       	std	Y+2, r24	; 0x02
	ES_t local_enuerror=ES_NOK;
 1ee:	19 82       	std	Y+1, r1	; 0x01
			if( Copy_u8PortID<=D_u8PORTD){
 1f0:	8a 81       	ldd	r24, Y+2	; 0x02
 1f2:	84 30       	cpi	r24, 0x04	; 4
 1f4:	08 f0       	brcs	.+2      	; 0x1f8 <DIO_enuTogPortValue+0x18>
 1f6:	41 c0       	rjmp	.+130    	; 0x27a <DIO_enuTogPortValue+0x9a>
				local_enuerror=ES_OK;
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	89 83       	std	Y+1, r24	; 0x01

				 switch(Copy_u8PortID){
 1fc:	8a 81       	ldd	r24, Y+2	; 0x02
 1fe:	28 2f       	mov	r18, r24
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	3c 83       	std	Y+4, r19	; 0x04
 204:	2b 83       	std	Y+3, r18	; 0x03
 206:	8b 81       	ldd	r24, Y+3	; 0x03
 208:	9c 81       	ldd	r25, Y+4	; 0x04
 20a:	81 30       	cpi	r24, 0x01	; 1
 20c:	91 05       	cpc	r25, r1
 20e:	e9 f0       	breq	.+58     	; 0x24a <DIO_enuTogPortValue+0x6a>
 210:	2b 81       	ldd	r18, Y+3	; 0x03
 212:	3c 81       	ldd	r19, Y+4	; 0x04
 214:	22 30       	cpi	r18, 0x02	; 2
 216:	31 05       	cpc	r19, r1
 218:	2c f4       	brge	.+10     	; 0x224 <DIO_enuTogPortValue+0x44>
 21a:	8b 81       	ldd	r24, Y+3	; 0x03
 21c:	9c 81       	ldd	r25, Y+4	; 0x04
 21e:	00 97       	sbiw	r24, 0x00	; 0
 220:	61 f0       	breq	.+24     	; 0x23a <DIO_enuTogPortValue+0x5a>
 222:	2d c0       	rjmp	.+90     	; 0x27e <DIO_enuTogPortValue+0x9e>
 224:	2b 81       	ldd	r18, Y+3	; 0x03
 226:	3c 81       	ldd	r19, Y+4	; 0x04
 228:	22 30       	cpi	r18, 0x02	; 2
 22a:	31 05       	cpc	r19, r1
 22c:	b1 f0       	breq	.+44     	; 0x25a <DIO_enuTogPortValue+0x7a>
 22e:	8b 81       	ldd	r24, Y+3	; 0x03
 230:	9c 81       	ldd	r25, Y+4	; 0x04
 232:	83 30       	cpi	r24, 0x03	; 3
 234:	91 05       	cpc	r25, r1
 236:	c9 f0       	breq	.+50     	; 0x26a <DIO_enuTogPortValue+0x8a>
 238:	22 c0       	rjmp	.+68     	; 0x27e <DIO_enuTogPortValue+0x9e>
							 case D_u8PORTA:
								 PORTA= ~PORTA;
 23a:	ab e3       	ldi	r26, 0x3B	; 59
 23c:	b0 e0       	ldi	r27, 0x00	; 0
 23e:	eb e3       	ldi	r30, 0x3B	; 59
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	80 81       	ld	r24, Z
 244:	80 95       	com	r24
 246:	8c 93       	st	X, r24
 248:	1a c0       	rjmp	.+52     	; 0x27e <DIO_enuTogPortValue+0x9e>
								 break;
							 case D_u8PORTB:
								 PORTB= ~PORTB;
 24a:	a8 e3       	ldi	r26, 0x38	; 56
 24c:	b0 e0       	ldi	r27, 0x00	; 0
 24e:	e8 e3       	ldi	r30, 0x38	; 56
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	80 81       	ld	r24, Z
 254:	80 95       	com	r24
 256:	8c 93       	st	X, r24
 258:	12 c0       	rjmp	.+36     	; 0x27e <DIO_enuTogPortValue+0x9e>
										 break;
							 case D_u8PORTC:
								 PORTC= ~PORTC;
 25a:	a5 e3       	ldi	r26, 0x35	; 53
 25c:	b0 e0       	ldi	r27, 0x00	; 0
 25e:	e5 e3       	ldi	r30, 0x35	; 53
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	80 81       	ld	r24, Z
 264:	80 95       	com	r24
 266:	8c 93       	st	X, r24
 268:	0a c0       	rjmp	.+20     	; 0x27e <DIO_enuTogPortValue+0x9e>
										 break;
							 case D_u8PORTD:
							 PORTD=~ PORTD;
 26a:	a2 e3       	ldi	r26, 0x32	; 50
 26c:	b0 e0       	ldi	r27, 0x00	; 0
 26e:	e2 e3       	ldi	r30, 0x32	; 50
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	80 81       	ld	r24, Z
 274:	80 95       	com	r24
 276:	8c 93       	st	X, r24
 278:	02 c0       	rjmp	.+4      	; 0x27e <DIO_enuTogPortValue+0x9e>
							 }

			}
			else
				{
				local_enuerror = ES_OUT_OF_RANGE;
 27a:	83 e0       	ldi	r24, 0x03	; 3
 27c:	89 83       	std	Y+1, r24	; 0x01
				}
			return local_enuerror;
 27e:	89 81       	ldd	r24, Y+1	; 0x01
}
 280:	0f 90       	pop	r0
 282:	0f 90       	pop	r0
 284:	0f 90       	pop	r0
 286:	0f 90       	pop	r0
 288:	cf 91       	pop	r28
 28a:	df 91       	pop	r29
 28c:	08 95       	ret

0000028e <DIO_enuGetPortValue>:

ES_t DIO_enuGetPortValue(u8 Copy_u8PortID , u8  *Copy_pu8Value){
 28e:	df 93       	push	r29
 290:	cf 93       	push	r28
 292:	00 d0       	rcall	.+0      	; 0x294 <DIO_enuGetPortValue+0x6>
 294:	00 d0       	rcall	.+0      	; 0x296 <DIO_enuGetPortValue+0x8>
 296:	00 d0       	rcall	.+0      	; 0x298 <DIO_enuGetPortValue+0xa>
 298:	cd b7       	in	r28, 0x3d	; 61
 29a:	de b7       	in	r29, 0x3e	; 62
 29c:	8a 83       	std	Y+2, r24	; 0x02
 29e:	7c 83       	std	Y+4, r23	; 0x04
 2a0:	6b 83       	std	Y+3, r22	; 0x03
	ES_t local_enuerror=ES_NOK;
 2a2:	19 82       	std	Y+1, r1	; 0x01
	if( Copy_pu8Value!=NULL){
 2a4:	8b 81       	ldd	r24, Y+3	; 0x03
 2a6:	9c 81       	ldd	r25, Y+4	; 0x04
 2a8:	00 97       	sbiw	r24, 0x00	; 0
 2aa:	09 f4       	brne	.+2      	; 0x2ae <DIO_enuGetPortValue+0x20>
 2ac:	43 c0       	rjmp	.+134    	; 0x334 <DIO_enuGetPortValue+0xa6>
	if( Copy_u8PortID<=D_u8PORTD){
 2ae:	8a 81       	ldd	r24, Y+2	; 0x02
 2b0:	84 30       	cpi	r24, 0x04	; 4
 2b2:	e8 f5       	brcc	.+122    	; 0x32e <DIO_enuGetPortValue+0xa0>

				 local_enuerror=ES_OK;
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	89 83       	std	Y+1, r24	; 0x01
				 switch(Copy_u8PortID){
 2b8:	8a 81       	ldd	r24, Y+2	; 0x02
 2ba:	28 2f       	mov	r18, r24
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	3e 83       	std	Y+6, r19	; 0x06
 2c0:	2d 83       	std	Y+5, r18	; 0x05
 2c2:	8d 81       	ldd	r24, Y+5	; 0x05
 2c4:	9e 81       	ldd	r25, Y+6	; 0x06
 2c6:	81 30       	cpi	r24, 0x01	; 1
 2c8:	91 05       	cpc	r25, r1
 2ca:	e1 f0       	breq	.+56     	; 0x304 <DIO_enuGetPortValue+0x76>
 2cc:	2d 81       	ldd	r18, Y+5	; 0x05
 2ce:	3e 81       	ldd	r19, Y+6	; 0x06
 2d0:	22 30       	cpi	r18, 0x02	; 2
 2d2:	31 05       	cpc	r19, r1
 2d4:	2c f4       	brge	.+10     	; 0x2e0 <DIO_enuGetPortValue+0x52>
 2d6:	8d 81       	ldd	r24, Y+5	; 0x05
 2d8:	9e 81       	ldd	r25, Y+6	; 0x06
 2da:	00 97       	sbiw	r24, 0x00	; 0
 2dc:	61 f0       	breq	.+24     	; 0x2f6 <DIO_enuGetPortValue+0x68>
 2de:	2c c0       	rjmp	.+88     	; 0x338 <DIO_enuGetPortValue+0xaa>
 2e0:	2d 81       	ldd	r18, Y+5	; 0x05
 2e2:	3e 81       	ldd	r19, Y+6	; 0x06
 2e4:	22 30       	cpi	r18, 0x02	; 2
 2e6:	31 05       	cpc	r19, r1
 2e8:	a1 f0       	breq	.+40     	; 0x312 <DIO_enuGetPortValue+0x84>
 2ea:	8d 81       	ldd	r24, Y+5	; 0x05
 2ec:	9e 81       	ldd	r25, Y+6	; 0x06
 2ee:	83 30       	cpi	r24, 0x03	; 3
 2f0:	91 05       	cpc	r25, r1
 2f2:	b1 f0       	breq	.+44     	; 0x320 <DIO_enuGetPortValue+0x92>
 2f4:	21 c0       	rjmp	.+66     	; 0x338 <DIO_enuGetPortValue+0xaa>
				 case DIO_PORTA:
					 *Copy_pu8Value=PINA;
 2f6:	e9 e3       	ldi	r30, 0x39	; 57
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	eb 81       	ldd	r30, Y+3	; 0x03
 2fe:	fc 81       	ldd	r31, Y+4	; 0x04
 300:	80 83       	st	Z, r24
 302:	1a c0       	rjmp	.+52     	; 0x338 <DIO_enuGetPortValue+0xaa>
					 break;
				 case DIO_PORTB:
					 *Copy_pu8Value=PINB;
 304:	e6 e3       	ldi	r30, 0x36	; 54
 306:	f0 e0       	ldi	r31, 0x00	; 0
 308:	80 81       	ld	r24, Z
 30a:	eb 81       	ldd	r30, Y+3	; 0x03
 30c:	fc 81       	ldd	r31, Y+4	; 0x04
 30e:	80 83       	st	Z, r24
 310:	13 c0       	rjmp	.+38     	; 0x338 <DIO_enuGetPortValue+0xaa>
							 break;
				 case DIO_PORTC:
					 *Copy_pu8Value=PINC;
 312:	e3 e3       	ldi	r30, 0x33	; 51
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	80 81       	ld	r24, Z
 318:	eb 81       	ldd	r30, Y+3	; 0x03
 31a:	fc 81       	ldd	r31, Y+4	; 0x04
 31c:	80 83       	st	Z, r24
 31e:	0c c0       	rjmp	.+24     	; 0x338 <DIO_enuGetPortValue+0xaa>
							 break;
				 case DIO_PORTD:
				 *Copy_pu8Value=PIND;
 320:	e0 e3       	ldi	r30, 0x30	; 48
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	80 81       	ld	r24, Z
 326:	eb 81       	ldd	r30, Y+3	; 0x03
 328:	fc 81       	ldd	r31, Y+4	; 0x04
 32a:	80 83       	st	Z, r24
 32c:	05 c0       	rjmp	.+10     	; 0x338 <DIO_enuGetPortValue+0xaa>

			}

			else
				{
				local_enuerror = ES_OUT_OF_RANGE;
 32e:	83 e0       	ldi	r24, 0x03	; 3
 330:	89 83       	std	Y+1, r24	; 0x01
 332:	02 c0       	rjmp	.+4      	; 0x338 <DIO_enuGetPortValue+0xaa>
				}
	}
	else{
		local_enuerror = ES_NULLPOINTER;
 334:	82 e0       	ldi	r24, 0x02	; 2
 336:	89 83       	std	Y+1, r24	; 0x01
	}

return local_enuerror;
 338:	89 81       	ldd	r24, Y+1	; 0x01

}
 33a:	26 96       	adiw	r28, 0x06	; 6
 33c:	0f b6       	in	r0, 0x3f	; 63
 33e:	f8 94       	cli
 340:	de bf       	out	0x3e, r29	; 62
 342:	0f be       	out	0x3f, r0	; 63
 344:	cd bf       	out	0x3d, r28	; 61
 346:	cf 91       	pop	r28
 348:	df 91       	pop	r29
 34a:	08 95       	ret

0000034c <DIO_enuSetPinDirection>:

ES_t DIO_enuSetPinDirection(u8 Copy_u8PortID ,u8 Copy_u8PinID , u8 Copy_u8Value){
 34c:	df 93       	push	r29
 34e:	cf 93       	push	r28
 350:	00 d0       	rcall	.+0      	; 0x352 <DIO_enuSetPinDirection+0x6>
 352:	00 d0       	rcall	.+0      	; 0x354 <DIO_enuSetPinDirection+0x8>
 354:	00 d0       	rcall	.+0      	; 0x356 <DIO_enuSetPinDirection+0xa>
 356:	cd b7       	in	r28, 0x3d	; 61
 358:	de b7       	in	r29, 0x3e	; 62
 35a:	8a 83       	std	Y+2, r24	; 0x02
 35c:	6b 83       	std	Y+3, r22	; 0x03
 35e:	4c 83       	std	Y+4, r20	; 0x04
	ES_t local_enuerror=ES_NOK;
 360:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8PortID<=D_u8PORTD && Copy_u8PinID<=D_u8PIN7 && Copy_u8Value<=OUTPUT){
 362:	8a 81       	ldd	r24, Y+2	; 0x02
 364:	84 30       	cpi	r24, 0x04	; 4
 366:	08 f0       	brcs	.+2      	; 0x36a <DIO_enuSetPinDirection+0x1e>
 368:	cc c0       	rjmp	.+408    	; 0x502 <__stack+0xa3>
 36a:	8b 81       	ldd	r24, Y+3	; 0x03
 36c:	88 30       	cpi	r24, 0x08	; 8
 36e:	08 f0       	brcs	.+2      	; 0x372 <DIO_enuSetPinDirection+0x26>
 370:	c8 c0       	rjmp	.+400    	; 0x502 <__stack+0xa3>
 372:	8c 81       	ldd	r24, Y+4	; 0x04
 374:	82 30       	cpi	r24, 0x02	; 2
 376:	08 f0       	brcs	.+2      	; 0x37a <DIO_enuSetPinDirection+0x2e>
 378:	c4 c0       	rjmp	.+392    	; 0x502 <__stack+0xa3>
		local_enuerror=ES_OK;
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	89 83       	std	Y+1, r24	; 0x01
		switch(Copy_u8PortID){
 37e:	8a 81       	ldd	r24, Y+2	; 0x02
 380:	28 2f       	mov	r18, r24
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	3e 83       	std	Y+6, r19	; 0x06
 386:	2d 83       	std	Y+5, r18	; 0x05
 388:	6d 81       	ldd	r22, Y+5	; 0x05
 38a:	7e 81       	ldd	r23, Y+6	; 0x06
 38c:	61 30       	cpi	r22, 0x01	; 1
 38e:	71 05       	cpc	r23, r1
 390:	09 f4       	brne	.+2      	; 0x394 <DIO_enuSetPinDirection+0x48>
 392:	41 c0       	rjmp	.+130    	; 0x416 <DIO_enuSetPinDirection+0xca>
 394:	8d 81       	ldd	r24, Y+5	; 0x05
 396:	9e 81       	ldd	r25, Y+6	; 0x06
 398:	82 30       	cpi	r24, 0x02	; 2
 39a:	91 05       	cpc	r25, r1
 39c:	34 f4       	brge	.+12     	; 0x3aa <DIO_enuSetPinDirection+0x5e>
 39e:	2d 81       	ldd	r18, Y+5	; 0x05
 3a0:	3e 81       	ldd	r19, Y+6	; 0x06
 3a2:	21 15       	cp	r18, r1
 3a4:	31 05       	cpc	r19, r1
 3a6:	71 f0       	breq	.+28     	; 0x3c4 <DIO_enuSetPinDirection+0x78>
 3a8:	ae c0       	rjmp	.+348    	; 0x506 <__stack+0xa7>
 3aa:	6d 81       	ldd	r22, Y+5	; 0x05
 3ac:	7e 81       	ldd	r23, Y+6	; 0x06
 3ae:	62 30       	cpi	r22, 0x02	; 2
 3b0:	71 05       	cpc	r23, r1
 3b2:	09 f4       	brne	.+2      	; 0x3b6 <DIO_enuSetPinDirection+0x6a>
 3b4:	59 c0       	rjmp	.+178    	; 0x468 <__stack+0x9>
 3b6:	8d 81       	ldd	r24, Y+5	; 0x05
 3b8:	9e 81       	ldd	r25, Y+6	; 0x06
 3ba:	83 30       	cpi	r24, 0x03	; 3
 3bc:	91 05       	cpc	r25, r1
 3be:	09 f4       	brne	.+2      	; 0x3c2 <DIO_enuSetPinDirection+0x76>
 3c0:	77 c0       	rjmp	.+238    	; 0x4b0 <__stack+0x51>
 3c2:	a1 c0       	rjmp	.+322    	; 0x506 <__stack+0xa7>
		case DIO_PORTA:
			DDRA&=~(OUTPUT<<Copy_u8PinID);
 3c4:	aa e3       	ldi	r26, 0x3A	; 58
 3c6:	b0 e0       	ldi	r27, 0x00	; 0
 3c8:	ea e3       	ldi	r30, 0x3A	; 58
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	48 2f       	mov	r20, r24
 3d0:	8b 81       	ldd	r24, Y+3	; 0x03
 3d2:	28 2f       	mov	r18, r24
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <DIO_enuSetPinDirection+0x94>
 3dc:	88 0f       	add	r24, r24
 3de:	99 1f       	adc	r25, r25
 3e0:	2a 95       	dec	r18
 3e2:	e2 f7       	brpl	.-8      	; 0x3dc <DIO_enuSetPinDirection+0x90>
 3e4:	80 95       	com	r24
 3e6:	84 23       	and	r24, r20
 3e8:	8c 93       	st	X, r24
			DDRA|=(Copy_u8Value<<Copy_u8PinID);
 3ea:	aa e3       	ldi	r26, 0x3A	; 58
 3ec:	b0 e0       	ldi	r27, 0x00	; 0
 3ee:	ea e3       	ldi	r30, 0x3A	; 58
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	80 81       	ld	r24, Z
 3f4:	48 2f       	mov	r20, r24
 3f6:	8c 81       	ldd	r24, Y+4	; 0x04
 3f8:	28 2f       	mov	r18, r24
 3fa:	30 e0       	ldi	r19, 0x00	; 0
 3fc:	8b 81       	ldd	r24, Y+3	; 0x03
 3fe:	88 2f       	mov	r24, r24
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	b9 01       	movw	r22, r18
 404:	02 c0       	rjmp	.+4      	; 0x40a <DIO_enuSetPinDirection+0xbe>
 406:	66 0f       	add	r22, r22
 408:	77 1f       	adc	r23, r23
 40a:	8a 95       	dec	r24
 40c:	e2 f7       	brpl	.-8      	; 0x406 <DIO_enuSetPinDirection+0xba>
 40e:	cb 01       	movw	r24, r22
 410:	84 2b       	or	r24, r20
 412:	8c 93       	st	X, r24
 414:	78 c0       	rjmp	.+240    	; 0x506 <__stack+0xa7>

		break;
		case DIO_PORTB:
					DDRB&=~(OUTPUT<<Copy_u8PinID);
 416:	a7 e3       	ldi	r26, 0x37	; 55
 418:	b0 e0       	ldi	r27, 0x00	; 0
 41a:	e7 e3       	ldi	r30, 0x37	; 55
 41c:	f0 e0       	ldi	r31, 0x00	; 0
 41e:	80 81       	ld	r24, Z
 420:	48 2f       	mov	r20, r24
 422:	8b 81       	ldd	r24, Y+3	; 0x03
 424:	28 2f       	mov	r18, r24
 426:	30 e0       	ldi	r19, 0x00	; 0
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	02 c0       	rjmp	.+4      	; 0x432 <DIO_enuSetPinDirection+0xe6>
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	2a 95       	dec	r18
 434:	e2 f7       	brpl	.-8      	; 0x42e <DIO_enuSetPinDirection+0xe2>
 436:	80 95       	com	r24
 438:	84 23       	and	r24, r20
 43a:	8c 93       	st	X, r24
					DDRB|=(Copy_u8Value<<Copy_u8PinID);
 43c:	a7 e3       	ldi	r26, 0x37	; 55
 43e:	b0 e0       	ldi	r27, 0x00	; 0
 440:	e7 e3       	ldi	r30, 0x37	; 55
 442:	f0 e0       	ldi	r31, 0x00	; 0
 444:	80 81       	ld	r24, Z
 446:	48 2f       	mov	r20, r24
 448:	8c 81       	ldd	r24, Y+4	; 0x04
 44a:	28 2f       	mov	r18, r24
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	8b 81       	ldd	r24, Y+3	; 0x03
 450:	88 2f       	mov	r24, r24
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	b9 01       	movw	r22, r18
 456:	02 c0       	rjmp	.+4      	; 0x45c <DIO_enuSetPinDirection+0x110>
 458:	66 0f       	add	r22, r22
 45a:	77 1f       	adc	r23, r23
 45c:	8a 95       	dec	r24
 45e:	e2 f7       	brpl	.-8      	; 0x458 <DIO_enuSetPinDirection+0x10c>
 460:	cb 01       	movw	r24, r22
 462:	84 2b       	or	r24, r20
 464:	8c 93       	st	X, r24
 466:	4f c0       	rjmp	.+158    	; 0x506 <__stack+0xa7>

				break;
		case DIO_PORTC:
					DDRC=~(OUTPUT<<Copy_u8PinID);
 468:	e4 e3       	ldi	r30, 0x34	; 52
 46a:	f0 e0       	ldi	r31, 0x00	; 0
 46c:	8b 81       	ldd	r24, Y+3	; 0x03
 46e:	28 2f       	mov	r18, r24
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	02 c0       	rjmp	.+4      	; 0x47c <__stack+0x1d>
 478:	88 0f       	add	r24, r24
 47a:	99 1f       	adc	r25, r25
 47c:	2a 95       	dec	r18
 47e:	e2 f7       	brpl	.-8      	; 0x478 <__stack+0x19>
 480:	80 95       	com	r24
 482:	80 83       	st	Z, r24
					DDRC|=(Copy_u8Value<<Copy_u8PinID);
 484:	a4 e3       	ldi	r26, 0x34	; 52
 486:	b0 e0       	ldi	r27, 0x00	; 0
 488:	e4 e3       	ldi	r30, 0x34	; 52
 48a:	f0 e0       	ldi	r31, 0x00	; 0
 48c:	80 81       	ld	r24, Z
 48e:	48 2f       	mov	r20, r24
 490:	8c 81       	ldd	r24, Y+4	; 0x04
 492:	28 2f       	mov	r18, r24
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	8b 81       	ldd	r24, Y+3	; 0x03
 498:	88 2f       	mov	r24, r24
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	b9 01       	movw	r22, r18
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <__stack+0x45>
 4a0:	66 0f       	add	r22, r22
 4a2:	77 1f       	adc	r23, r23
 4a4:	8a 95       	dec	r24
 4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <__stack+0x41>
 4a8:	cb 01       	movw	r24, r22
 4aa:	84 2b       	or	r24, r20
 4ac:	8c 93       	st	X, r24
 4ae:	2b c0       	rjmp	.+86     	; 0x506 <__stack+0xa7>

				break;
		case DIO_PORTD:
					DDRD&=~(OUTPUT<<Copy_u8PinID);
 4b0:	a1 e3       	ldi	r26, 0x31	; 49
 4b2:	b0 e0       	ldi	r27, 0x00	; 0
 4b4:	e1 e3       	ldi	r30, 0x31	; 49
 4b6:	f0 e0       	ldi	r31, 0x00	; 0
 4b8:	80 81       	ld	r24, Z
 4ba:	48 2f       	mov	r20, r24
 4bc:	8b 81       	ldd	r24, Y+3	; 0x03
 4be:	28 2f       	mov	r18, r24
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <__stack+0x6d>
 4c8:	88 0f       	add	r24, r24
 4ca:	99 1f       	adc	r25, r25
 4cc:	2a 95       	dec	r18
 4ce:	e2 f7       	brpl	.-8      	; 0x4c8 <__stack+0x69>
 4d0:	80 95       	com	r24
 4d2:	84 23       	and	r24, r20
 4d4:	8c 93       	st	X, r24
					DDRD|=(Copy_u8Value<<Copy_u8PinID);
 4d6:	a1 e3       	ldi	r26, 0x31	; 49
 4d8:	b0 e0       	ldi	r27, 0x00	; 0
 4da:	e1 e3       	ldi	r30, 0x31	; 49
 4dc:	f0 e0       	ldi	r31, 0x00	; 0
 4de:	80 81       	ld	r24, Z
 4e0:	48 2f       	mov	r20, r24
 4e2:	8c 81       	ldd	r24, Y+4	; 0x04
 4e4:	28 2f       	mov	r18, r24
 4e6:	30 e0       	ldi	r19, 0x00	; 0
 4e8:	8b 81       	ldd	r24, Y+3	; 0x03
 4ea:	88 2f       	mov	r24, r24
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	b9 01       	movw	r22, r18
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <__stack+0x97>
 4f2:	66 0f       	add	r22, r22
 4f4:	77 1f       	adc	r23, r23
 4f6:	8a 95       	dec	r24
 4f8:	e2 f7       	brpl	.-8      	; 0x4f2 <__stack+0x93>
 4fa:	cb 01       	movw	r24, r22
 4fc:	84 2b       	or	r24, r20
 4fe:	8c 93       	st	X, r24
 500:	02 c0       	rjmp	.+4      	; 0x506 <__stack+0xa7>



	}
	else{
			local_enuerror = ES_NULLPOINTER;
 502:	82 e0       	ldi	r24, 0x02	; 2
 504:	89 83       	std	Y+1, r24	; 0x01
		}

	return local_enuerror;
 506:	89 81       	ldd	r24, Y+1	; 0x01

}
 508:	26 96       	adiw	r28, 0x06	; 6
 50a:	0f b6       	in	r0, 0x3f	; 63
 50c:	f8 94       	cli
 50e:	de bf       	out	0x3e, r29	; 62
 510:	0f be       	out	0x3f, r0	; 63
 512:	cd bf       	out	0x3d, r28	; 61
 514:	cf 91       	pop	r28
 516:	df 91       	pop	r29
 518:	08 95       	ret

0000051a <DIO_enuSetPinValue>:

ES_t DIO_enuSetPinValue(u8 Copy_u8PortID , u8 Copy_u8PinID ,u8 Copy_u8Value){
 51a:	df 93       	push	r29
 51c:	cf 93       	push	r28
 51e:	00 d0       	rcall	.+0      	; 0x520 <DIO_enuSetPinValue+0x6>
 520:	00 d0       	rcall	.+0      	; 0x522 <DIO_enuSetPinValue+0x8>
 522:	00 d0       	rcall	.+0      	; 0x524 <DIO_enuSetPinValue+0xa>
 524:	cd b7       	in	r28, 0x3d	; 61
 526:	de b7       	in	r29, 0x3e	; 62
 528:	8a 83       	std	Y+2, r24	; 0x02
 52a:	6b 83       	std	Y+3, r22	; 0x03
 52c:	4c 83       	std	Y+4, r20	; 0x04
	ES_t local_enuerror=ES_NOK;
 52e:	19 82       	std	Y+1, r1	; 0x01

		if(Copy_u8PortID<=D_u8PORTD && Copy_u8PinID<=D_u8PIN7 && Copy_u8Value<=OUTPUT){
 530:	8a 81       	ldd	r24, Y+2	; 0x02
 532:	84 30       	cpi	r24, 0x04	; 4
 534:	08 f0       	brcs	.+2      	; 0x538 <DIO_enuSetPinValue+0x1e>
 536:	cc c0       	rjmp	.+408    	; 0x6d0 <DIO_enuSetPinValue+0x1b6>
 538:	8b 81       	ldd	r24, Y+3	; 0x03
 53a:	88 30       	cpi	r24, 0x08	; 8
 53c:	08 f0       	brcs	.+2      	; 0x540 <DIO_enuSetPinValue+0x26>
 53e:	c8 c0       	rjmp	.+400    	; 0x6d0 <DIO_enuSetPinValue+0x1b6>
 540:	8c 81       	ldd	r24, Y+4	; 0x04
 542:	82 30       	cpi	r24, 0x02	; 2
 544:	08 f0       	brcs	.+2      	; 0x548 <DIO_enuSetPinValue+0x2e>
 546:	c4 c0       	rjmp	.+392    	; 0x6d0 <DIO_enuSetPinValue+0x1b6>
			local_enuerror=ES_OK;
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	89 83       	std	Y+1, r24	; 0x01
			switch(Copy_u8PortID){
 54c:	8a 81       	ldd	r24, Y+2	; 0x02
 54e:	28 2f       	mov	r18, r24
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	3e 83       	std	Y+6, r19	; 0x06
 554:	2d 83       	std	Y+5, r18	; 0x05
 556:	6d 81       	ldd	r22, Y+5	; 0x05
 558:	7e 81       	ldd	r23, Y+6	; 0x06
 55a:	61 30       	cpi	r22, 0x01	; 1
 55c:	71 05       	cpc	r23, r1
 55e:	09 f4       	brne	.+2      	; 0x562 <DIO_enuSetPinValue+0x48>
 560:	41 c0       	rjmp	.+130    	; 0x5e4 <DIO_enuSetPinValue+0xca>
 562:	8d 81       	ldd	r24, Y+5	; 0x05
 564:	9e 81       	ldd	r25, Y+6	; 0x06
 566:	82 30       	cpi	r24, 0x02	; 2
 568:	91 05       	cpc	r25, r1
 56a:	34 f4       	brge	.+12     	; 0x578 <DIO_enuSetPinValue+0x5e>
 56c:	2d 81       	ldd	r18, Y+5	; 0x05
 56e:	3e 81       	ldd	r19, Y+6	; 0x06
 570:	21 15       	cp	r18, r1
 572:	31 05       	cpc	r19, r1
 574:	71 f0       	breq	.+28     	; 0x592 <DIO_enuSetPinValue+0x78>
 576:	ae c0       	rjmp	.+348    	; 0x6d4 <DIO_enuSetPinValue+0x1ba>
 578:	6d 81       	ldd	r22, Y+5	; 0x05
 57a:	7e 81       	ldd	r23, Y+6	; 0x06
 57c:	62 30       	cpi	r22, 0x02	; 2
 57e:	71 05       	cpc	r23, r1
 580:	09 f4       	brne	.+2      	; 0x584 <DIO_enuSetPinValue+0x6a>
 582:	59 c0       	rjmp	.+178    	; 0x636 <DIO_enuSetPinValue+0x11c>
 584:	8d 81       	ldd	r24, Y+5	; 0x05
 586:	9e 81       	ldd	r25, Y+6	; 0x06
 588:	83 30       	cpi	r24, 0x03	; 3
 58a:	91 05       	cpc	r25, r1
 58c:	09 f4       	brne	.+2      	; 0x590 <DIO_enuSetPinValue+0x76>
 58e:	77 c0       	rjmp	.+238    	; 0x67e <DIO_enuSetPinValue+0x164>
 590:	a1 c0       	rjmp	.+322    	; 0x6d4 <DIO_enuSetPinValue+0x1ba>
			case DIO_PORTA:
				PORTA &=~(OUTPUT<<Copy_u8PinID);
 592:	ab e3       	ldi	r26, 0x3B	; 59
 594:	b0 e0       	ldi	r27, 0x00	; 0
 596:	eb e3       	ldi	r30, 0x3B	; 59
 598:	f0 e0       	ldi	r31, 0x00	; 0
 59a:	80 81       	ld	r24, Z
 59c:	48 2f       	mov	r20, r24
 59e:	8b 81       	ldd	r24, Y+3	; 0x03
 5a0:	28 2f       	mov	r18, r24
 5a2:	30 e0       	ldi	r19, 0x00	; 0
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <DIO_enuSetPinValue+0x94>
 5aa:	88 0f       	add	r24, r24
 5ac:	99 1f       	adc	r25, r25
 5ae:	2a 95       	dec	r18
 5b0:	e2 f7       	brpl	.-8      	; 0x5aa <DIO_enuSetPinValue+0x90>
 5b2:	80 95       	com	r24
 5b4:	84 23       	and	r24, r20
 5b6:	8c 93       	st	X, r24
				PORTA |=(Copy_u8Value<<Copy_u8PinID);
 5b8:	ab e3       	ldi	r26, 0x3B	; 59
 5ba:	b0 e0       	ldi	r27, 0x00	; 0
 5bc:	eb e3       	ldi	r30, 0x3B	; 59
 5be:	f0 e0       	ldi	r31, 0x00	; 0
 5c0:	80 81       	ld	r24, Z
 5c2:	48 2f       	mov	r20, r24
 5c4:	8c 81       	ldd	r24, Y+4	; 0x04
 5c6:	28 2f       	mov	r18, r24
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	8b 81       	ldd	r24, Y+3	; 0x03
 5cc:	88 2f       	mov	r24, r24
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	b9 01       	movw	r22, r18
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <DIO_enuSetPinValue+0xbe>
 5d4:	66 0f       	add	r22, r22
 5d6:	77 1f       	adc	r23, r23
 5d8:	8a 95       	dec	r24
 5da:	e2 f7       	brpl	.-8      	; 0x5d4 <DIO_enuSetPinValue+0xba>
 5dc:	cb 01       	movw	r24, r22
 5de:	84 2b       	or	r24, r20
 5e0:	8c 93       	st	X, r24
 5e2:	78 c0       	rjmp	.+240    	; 0x6d4 <DIO_enuSetPinValue+0x1ba>

			break;
			case DIO_PORTB:
				PORTB&=~(OUTPUT<<Copy_u8PinID);
 5e4:	a8 e3       	ldi	r26, 0x38	; 56
 5e6:	b0 e0       	ldi	r27, 0x00	; 0
 5e8:	e8 e3       	ldi	r30, 0x38	; 56
 5ea:	f0 e0       	ldi	r31, 0x00	; 0
 5ec:	80 81       	ld	r24, Z
 5ee:	48 2f       	mov	r20, r24
 5f0:	8b 81       	ldd	r24, Y+3	; 0x03
 5f2:	28 2f       	mov	r18, r24
 5f4:	30 e0       	ldi	r19, 0x00	; 0
 5f6:	81 e0       	ldi	r24, 0x01	; 1
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <DIO_enuSetPinValue+0xe6>
 5fc:	88 0f       	add	r24, r24
 5fe:	99 1f       	adc	r25, r25
 600:	2a 95       	dec	r18
 602:	e2 f7       	brpl	.-8      	; 0x5fc <DIO_enuSetPinValue+0xe2>
 604:	80 95       	com	r24
 606:	84 23       	and	r24, r20
 608:	8c 93       	st	X, r24
				PORTB|=(Copy_u8Value<<Copy_u8PinID);
 60a:	a8 e3       	ldi	r26, 0x38	; 56
 60c:	b0 e0       	ldi	r27, 0x00	; 0
 60e:	e8 e3       	ldi	r30, 0x38	; 56
 610:	f0 e0       	ldi	r31, 0x00	; 0
 612:	80 81       	ld	r24, Z
 614:	48 2f       	mov	r20, r24
 616:	8c 81       	ldd	r24, Y+4	; 0x04
 618:	28 2f       	mov	r18, r24
 61a:	30 e0       	ldi	r19, 0x00	; 0
 61c:	8b 81       	ldd	r24, Y+3	; 0x03
 61e:	88 2f       	mov	r24, r24
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	b9 01       	movw	r22, r18
 624:	02 c0       	rjmp	.+4      	; 0x62a <DIO_enuSetPinValue+0x110>
 626:	66 0f       	add	r22, r22
 628:	77 1f       	adc	r23, r23
 62a:	8a 95       	dec	r24
 62c:	e2 f7       	brpl	.-8      	; 0x626 <DIO_enuSetPinValue+0x10c>
 62e:	cb 01       	movw	r24, r22
 630:	84 2b       	or	r24, r20
 632:	8c 93       	st	X, r24
 634:	4f c0       	rjmp	.+158    	; 0x6d4 <DIO_enuSetPinValue+0x1ba>

					break;
			case DIO_PORTC:
				PORTC =~(OUTPUT<<Copy_u8PinID);
 636:	e5 e3       	ldi	r30, 0x35	; 53
 638:	f0 e0       	ldi	r31, 0x00	; 0
 63a:	8b 81       	ldd	r24, Y+3	; 0x03
 63c:	28 2f       	mov	r18, r24
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	02 c0       	rjmp	.+4      	; 0x64a <DIO_enuSetPinValue+0x130>
 646:	88 0f       	add	r24, r24
 648:	99 1f       	adc	r25, r25
 64a:	2a 95       	dec	r18
 64c:	e2 f7       	brpl	.-8      	; 0x646 <DIO_enuSetPinValue+0x12c>
 64e:	80 95       	com	r24
 650:	80 83       	st	Z, r24
				PORTC |=(Copy_u8Value<<Copy_u8PinID);
 652:	a5 e3       	ldi	r26, 0x35	; 53
 654:	b0 e0       	ldi	r27, 0x00	; 0
 656:	e5 e3       	ldi	r30, 0x35	; 53
 658:	f0 e0       	ldi	r31, 0x00	; 0
 65a:	80 81       	ld	r24, Z
 65c:	48 2f       	mov	r20, r24
 65e:	8c 81       	ldd	r24, Y+4	; 0x04
 660:	28 2f       	mov	r18, r24
 662:	30 e0       	ldi	r19, 0x00	; 0
 664:	8b 81       	ldd	r24, Y+3	; 0x03
 666:	88 2f       	mov	r24, r24
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	b9 01       	movw	r22, r18
 66c:	02 c0       	rjmp	.+4      	; 0x672 <DIO_enuSetPinValue+0x158>
 66e:	66 0f       	add	r22, r22
 670:	77 1f       	adc	r23, r23
 672:	8a 95       	dec	r24
 674:	e2 f7       	brpl	.-8      	; 0x66e <DIO_enuSetPinValue+0x154>
 676:	cb 01       	movw	r24, r22
 678:	84 2b       	or	r24, r20
 67a:	8c 93       	st	X, r24
 67c:	2b c0       	rjmp	.+86     	; 0x6d4 <DIO_enuSetPinValue+0x1ba>

					break;
			case DIO_PORTD:
						PORTD &=~(OUTPUT<<Copy_u8PinID);
 67e:	a2 e3       	ldi	r26, 0x32	; 50
 680:	b0 e0       	ldi	r27, 0x00	; 0
 682:	e2 e3       	ldi	r30, 0x32	; 50
 684:	f0 e0       	ldi	r31, 0x00	; 0
 686:	80 81       	ld	r24, Z
 688:	48 2f       	mov	r20, r24
 68a:	8b 81       	ldd	r24, Y+3	; 0x03
 68c:	28 2f       	mov	r18, r24
 68e:	30 e0       	ldi	r19, 0x00	; 0
 690:	81 e0       	ldi	r24, 0x01	; 1
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	02 c0       	rjmp	.+4      	; 0x69a <DIO_enuSetPinValue+0x180>
 696:	88 0f       	add	r24, r24
 698:	99 1f       	adc	r25, r25
 69a:	2a 95       	dec	r18
 69c:	e2 f7       	brpl	.-8      	; 0x696 <DIO_enuSetPinValue+0x17c>
 69e:	80 95       	com	r24
 6a0:	84 23       	and	r24, r20
 6a2:	8c 93       	st	X, r24
						PORTD |=(Copy_u8Value<<Copy_u8PinID);
 6a4:	a2 e3       	ldi	r26, 0x32	; 50
 6a6:	b0 e0       	ldi	r27, 0x00	; 0
 6a8:	e2 e3       	ldi	r30, 0x32	; 50
 6aa:	f0 e0       	ldi	r31, 0x00	; 0
 6ac:	80 81       	ld	r24, Z
 6ae:	48 2f       	mov	r20, r24
 6b0:	8c 81       	ldd	r24, Y+4	; 0x04
 6b2:	28 2f       	mov	r18, r24
 6b4:	30 e0       	ldi	r19, 0x00	; 0
 6b6:	8b 81       	ldd	r24, Y+3	; 0x03
 6b8:	88 2f       	mov	r24, r24
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	b9 01       	movw	r22, r18
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <DIO_enuSetPinValue+0x1aa>
 6c0:	66 0f       	add	r22, r22
 6c2:	77 1f       	adc	r23, r23
 6c4:	8a 95       	dec	r24
 6c6:	e2 f7       	brpl	.-8      	; 0x6c0 <DIO_enuSetPinValue+0x1a6>
 6c8:	cb 01       	movw	r24, r22
 6ca:	84 2b       	or	r24, r20
 6cc:	8c 93       	st	X, r24
 6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <DIO_enuSetPinValue+0x1ba>



		}
		else{
				local_enuerror = ES_NULLPOINTER;
 6d0:	82 e0       	ldi	r24, 0x02	; 2
 6d2:	89 83       	std	Y+1, r24	; 0x01
			}


		return local_enuerror;
 6d4:	89 81       	ldd	r24, Y+1	; 0x01

}
 6d6:	26 96       	adiw	r28, 0x06	; 6
 6d8:	0f b6       	in	r0, 0x3f	; 63
 6da:	f8 94       	cli
 6dc:	de bf       	out	0x3e, r29	; 62
 6de:	0f be       	out	0x3f, r0	; 63
 6e0:	cd bf       	out	0x3d, r28	; 61
 6e2:	cf 91       	pop	r28
 6e4:	df 91       	pop	r29
 6e6:	08 95       	ret

000006e8 <DIO_enuTogPinValue>:

ES_t DIO_enuTogPinValue(u8 Copy_u8PortID, u8 Copy_u8PinID ){
 6e8:	df 93       	push	r29
 6ea:	cf 93       	push	r28
 6ec:	00 d0       	rcall	.+0      	; 0x6ee <DIO_enuTogPinValue+0x6>
 6ee:	00 d0       	rcall	.+0      	; 0x6f0 <DIO_enuTogPinValue+0x8>
 6f0:	0f 92       	push	r0
 6f2:	cd b7       	in	r28, 0x3d	; 61
 6f4:	de b7       	in	r29, 0x3e	; 62
 6f6:	8a 83       	std	Y+2, r24	; 0x02
 6f8:	6b 83       	std	Y+3, r22	; 0x03
	ES_t local_enuerror=ES_NOK;
 6fa:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8PortID<= DIO_PORTD && Copy_u8PinID<= D_u8PIN7){
 6fc:	8a 81       	ldd	r24, Y+2	; 0x02
 6fe:	84 30       	cpi	r24, 0x04	; 4
 700:	08 f0       	brcs	.+2      	; 0x704 <DIO_enuTogPinValue+0x1c>
 702:	75 c0       	rjmp	.+234    	; 0x7ee <DIO_enuTogPinValue+0x106>
 704:	8b 81       	ldd	r24, Y+3	; 0x03
 706:	88 30       	cpi	r24, 0x08	; 8
 708:	08 f0       	brcs	.+2      	; 0x70c <DIO_enuTogPinValue+0x24>
 70a:	71 c0       	rjmp	.+226    	; 0x7ee <DIO_enuTogPinValue+0x106>
		local_enuerror=ES_OK;
 70c:	81 e0       	ldi	r24, 0x01	; 1
 70e:	89 83       	std	Y+1, r24	; 0x01
		switch(Copy_u8PortID){
 710:	8a 81       	ldd	r24, Y+2	; 0x02
 712:	28 2f       	mov	r18, r24
 714:	30 e0       	ldi	r19, 0x00	; 0
 716:	3d 83       	std	Y+5, r19	; 0x05
 718:	2c 83       	std	Y+4, r18	; 0x04
 71a:	8c 81       	ldd	r24, Y+4	; 0x04
 71c:	9d 81       	ldd	r25, Y+5	; 0x05
 71e:	81 30       	cpi	r24, 0x01	; 1
 720:	91 05       	cpc	r25, r1
 722:	49 f1       	breq	.+82     	; 0x776 <DIO_enuTogPinValue+0x8e>
 724:	2c 81       	ldd	r18, Y+4	; 0x04
 726:	3d 81       	ldd	r19, Y+5	; 0x05
 728:	22 30       	cpi	r18, 0x02	; 2
 72a:	31 05       	cpc	r19, r1
 72c:	2c f4       	brge	.+10     	; 0x738 <DIO_enuTogPinValue+0x50>
 72e:	8c 81       	ldd	r24, Y+4	; 0x04
 730:	9d 81       	ldd	r25, Y+5	; 0x05
 732:	00 97       	sbiw	r24, 0x00	; 0
 734:	61 f0       	breq	.+24     	; 0x74e <DIO_enuTogPinValue+0x66>
 736:	5d c0       	rjmp	.+186    	; 0x7f2 <DIO_enuTogPinValue+0x10a>
 738:	2c 81       	ldd	r18, Y+4	; 0x04
 73a:	3d 81       	ldd	r19, Y+5	; 0x05
 73c:	22 30       	cpi	r18, 0x02	; 2
 73e:	31 05       	cpc	r19, r1
 740:	71 f1       	breq	.+92     	; 0x79e <DIO_enuTogPinValue+0xb6>
 742:	8c 81       	ldd	r24, Y+4	; 0x04
 744:	9d 81       	ldd	r25, Y+5	; 0x05
 746:	83 30       	cpi	r24, 0x03	; 3
 748:	91 05       	cpc	r25, r1
 74a:	e9 f1       	breq	.+122    	; 0x7c6 <DIO_enuTogPinValue+0xde>
 74c:	52 c0       	rjmp	.+164    	; 0x7f2 <DIO_enuTogPinValue+0x10a>
					case DIO_PORTA:
						PORTA ^=(OUTPUT<<Copy_u8PinID);
 74e:	ab e3       	ldi	r26, 0x3B	; 59
 750:	b0 e0       	ldi	r27, 0x00	; 0
 752:	eb e3       	ldi	r30, 0x3B	; 59
 754:	f0 e0       	ldi	r31, 0x00	; 0
 756:	80 81       	ld	r24, Z
 758:	48 2f       	mov	r20, r24
 75a:	8b 81       	ldd	r24, Y+3	; 0x03
 75c:	28 2f       	mov	r18, r24
 75e:	30 e0       	ldi	r19, 0x00	; 0
 760:	81 e0       	ldi	r24, 0x01	; 1
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	02 2e       	mov	r0, r18
 766:	02 c0       	rjmp	.+4      	; 0x76c <DIO_enuTogPinValue+0x84>
 768:	88 0f       	add	r24, r24
 76a:	99 1f       	adc	r25, r25
 76c:	0a 94       	dec	r0
 76e:	e2 f7       	brpl	.-8      	; 0x768 <DIO_enuTogPinValue+0x80>
 770:	84 27       	eor	r24, r20
 772:	8c 93       	st	X, r24
 774:	3e c0       	rjmp	.+124    	; 0x7f2 <DIO_enuTogPinValue+0x10a>


					break;
					case DIO_PORTB:
						PORTB ^=(OUTPUT<<Copy_u8PinID);
 776:	a8 e3       	ldi	r26, 0x38	; 56
 778:	b0 e0       	ldi	r27, 0x00	; 0
 77a:	e8 e3       	ldi	r30, 0x38	; 56
 77c:	f0 e0       	ldi	r31, 0x00	; 0
 77e:	80 81       	ld	r24, Z
 780:	48 2f       	mov	r20, r24
 782:	8b 81       	ldd	r24, Y+3	; 0x03
 784:	28 2f       	mov	r18, r24
 786:	30 e0       	ldi	r19, 0x00	; 0
 788:	81 e0       	ldi	r24, 0x01	; 1
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	02 2e       	mov	r0, r18
 78e:	02 c0       	rjmp	.+4      	; 0x794 <DIO_enuTogPinValue+0xac>
 790:	88 0f       	add	r24, r24
 792:	99 1f       	adc	r25, r25
 794:	0a 94       	dec	r0
 796:	e2 f7       	brpl	.-8      	; 0x790 <DIO_enuTogPinValue+0xa8>
 798:	84 27       	eor	r24, r20
 79a:	8c 93       	st	X, r24
 79c:	2a c0       	rjmp	.+84     	; 0x7f2 <DIO_enuTogPinValue+0x10a>
							break;
					case DIO_PORTC:
						PORTC ^=(OUTPUT<<Copy_u8PinID);
 79e:	a5 e3       	ldi	r26, 0x35	; 53
 7a0:	b0 e0       	ldi	r27, 0x00	; 0
 7a2:	e5 e3       	ldi	r30, 0x35	; 53
 7a4:	f0 e0       	ldi	r31, 0x00	; 0
 7a6:	80 81       	ld	r24, Z
 7a8:	48 2f       	mov	r20, r24
 7aa:	8b 81       	ldd	r24, Y+3	; 0x03
 7ac:	28 2f       	mov	r18, r24
 7ae:	30 e0       	ldi	r19, 0x00	; 0
 7b0:	81 e0       	ldi	r24, 0x01	; 1
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	02 2e       	mov	r0, r18
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <DIO_enuTogPinValue+0xd4>
 7b8:	88 0f       	add	r24, r24
 7ba:	99 1f       	adc	r25, r25
 7bc:	0a 94       	dec	r0
 7be:	e2 f7       	brpl	.-8      	; 0x7b8 <DIO_enuTogPinValue+0xd0>
 7c0:	84 27       	eor	r24, r20
 7c2:	8c 93       	st	X, r24
 7c4:	16 c0       	rjmp	.+44     	; 0x7f2 <DIO_enuTogPinValue+0x10a>

							break;
					case DIO_PORTD:
						PORTD ^=(OUTPUT<<Copy_u8PinID);
 7c6:	a2 e3       	ldi	r26, 0x32	; 50
 7c8:	b0 e0       	ldi	r27, 0x00	; 0
 7ca:	e2 e3       	ldi	r30, 0x32	; 50
 7cc:	f0 e0       	ldi	r31, 0x00	; 0
 7ce:	80 81       	ld	r24, Z
 7d0:	48 2f       	mov	r20, r24
 7d2:	8b 81       	ldd	r24, Y+3	; 0x03
 7d4:	28 2f       	mov	r18, r24
 7d6:	30 e0       	ldi	r19, 0x00	; 0
 7d8:	81 e0       	ldi	r24, 0x01	; 1
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	02 2e       	mov	r0, r18
 7de:	02 c0       	rjmp	.+4      	; 0x7e4 <DIO_enuTogPinValue+0xfc>
 7e0:	88 0f       	add	r24, r24
 7e2:	99 1f       	adc	r25, r25
 7e4:	0a 94       	dec	r0
 7e6:	e2 f7       	brpl	.-8      	; 0x7e0 <DIO_enuTogPinValue+0xf8>
 7e8:	84 27       	eor	r24, r20
 7ea:	8c 93       	st	X, r24
 7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <DIO_enuTogPinValue+0x10a>
					}


	}
	else{
					local_enuerror = ES_NULLPOINTER;
 7ee:	82 e0       	ldi	r24, 0x02	; 2
 7f0:	89 83       	std	Y+1, r24	; 0x01
				}

	 return local_enuerror;
 7f2:	89 81       	ldd	r24, Y+1	; 0x01
}
 7f4:	0f 90       	pop	r0
 7f6:	0f 90       	pop	r0
 7f8:	0f 90       	pop	r0
 7fa:	0f 90       	pop	r0
 7fc:	0f 90       	pop	r0
 7fe:	cf 91       	pop	r28
 800:	df 91       	pop	r29
 802:	08 95       	ret

00000804 <DIO_enuGetPinValue>:

ES_t DIO_enuGetPinValue(u8 Copy_u8PortID ,u8 Copy_u8PinID , u8 * Copy_pu8Value){
 804:	df 93       	push	r29
 806:	cf 93       	push	r28
 808:	cd b7       	in	r28, 0x3d	; 61
 80a:	de b7       	in	r29, 0x3e	; 62
 80c:	27 97       	sbiw	r28, 0x07	; 7
 80e:	0f b6       	in	r0, 0x3f	; 63
 810:	f8 94       	cli
 812:	de bf       	out	0x3e, r29	; 62
 814:	0f be       	out	0x3f, r0	; 63
 816:	cd bf       	out	0x3d, r28	; 61
 818:	8a 83       	std	Y+2, r24	; 0x02
 81a:	6b 83       	std	Y+3, r22	; 0x03
 81c:	5d 83       	std	Y+5, r21	; 0x05
 81e:	4c 83       	std	Y+4, r20	; 0x04


	ES_t local_enuerror=ES_NOK;
 820:	19 82       	std	Y+1, r1	; 0x01
		if( Copy_pu8Value!=NULL){
 822:	8c 81       	ldd	r24, Y+4	; 0x04
 824:	9d 81       	ldd	r25, Y+5	; 0x05
 826:	00 97       	sbiw	r24, 0x00	; 0
 828:	09 f4       	brne	.+2      	; 0x82c <DIO_enuGetPinValue+0x28>
 82a:	7e c0       	rjmp	.+252    	; 0x928 <DIO_enuGetPinValue+0x124>
		if( Copy_u8PortID<=D_u8PORTD &&Copy_u8PinID<=D_u8PIN7){
 82c:	8a 81       	ldd	r24, Y+2	; 0x02
 82e:	84 30       	cpi	r24, 0x04	; 4
 830:	08 f0       	brcs	.+2      	; 0x834 <DIO_enuGetPinValue+0x30>
 832:	77 c0       	rjmp	.+238    	; 0x922 <DIO_enuGetPinValue+0x11e>
 834:	8b 81       	ldd	r24, Y+3	; 0x03
 836:	88 30       	cpi	r24, 0x08	; 8
 838:	08 f0       	brcs	.+2      	; 0x83c <DIO_enuGetPinValue+0x38>
 83a:	73 c0       	rjmp	.+230    	; 0x922 <DIO_enuGetPinValue+0x11e>

					 local_enuerror=ES_OK;
 83c:	81 e0       	ldi	r24, 0x01	; 1
 83e:	89 83       	std	Y+1, r24	; 0x01
					 switch(Copy_u8PortID){
 840:	8a 81       	ldd	r24, Y+2	; 0x02
 842:	28 2f       	mov	r18, r24
 844:	30 e0       	ldi	r19, 0x00	; 0
 846:	3f 83       	std	Y+7, r19	; 0x07
 848:	2e 83       	std	Y+6, r18	; 0x06
 84a:	4e 81       	ldd	r20, Y+6	; 0x06
 84c:	5f 81       	ldd	r21, Y+7	; 0x07
 84e:	41 30       	cpi	r20, 0x01	; 1
 850:	51 05       	cpc	r21, r1
 852:	59 f1       	breq	.+86     	; 0x8aa <DIO_enuGetPinValue+0xa6>
 854:	8e 81       	ldd	r24, Y+6	; 0x06
 856:	9f 81       	ldd	r25, Y+7	; 0x07
 858:	82 30       	cpi	r24, 0x02	; 2
 85a:	91 05       	cpc	r25, r1
 85c:	34 f4       	brge	.+12     	; 0x86a <DIO_enuGetPinValue+0x66>
 85e:	2e 81       	ldd	r18, Y+6	; 0x06
 860:	3f 81       	ldd	r19, Y+7	; 0x07
 862:	21 15       	cp	r18, r1
 864:	31 05       	cpc	r19, r1
 866:	69 f0       	breq	.+26     	; 0x882 <DIO_enuGetPinValue+0x7e>
 868:	61 c0       	rjmp	.+194    	; 0x92c <DIO_enuGetPinValue+0x128>
 86a:	4e 81       	ldd	r20, Y+6	; 0x06
 86c:	5f 81       	ldd	r21, Y+7	; 0x07
 86e:	42 30       	cpi	r20, 0x02	; 2
 870:	51 05       	cpc	r21, r1
 872:	79 f1       	breq	.+94     	; 0x8d2 <DIO_enuGetPinValue+0xce>
 874:	8e 81       	ldd	r24, Y+6	; 0x06
 876:	9f 81       	ldd	r25, Y+7	; 0x07
 878:	83 30       	cpi	r24, 0x03	; 3
 87a:	91 05       	cpc	r25, r1
 87c:	09 f4       	brne	.+2      	; 0x880 <DIO_enuGetPinValue+0x7c>
 87e:	3d c0       	rjmp	.+122    	; 0x8fa <DIO_enuGetPinValue+0xf6>
 880:	55 c0       	rjmp	.+170    	; 0x92c <DIO_enuGetPinValue+0x128>
					 case DIO_PORTA:
						 *Copy_pu8Value=(PINA>>Copy_u8PinID)&OUTPUT;
 882:	e9 e3       	ldi	r30, 0x39	; 57
 884:	f0 e0       	ldi	r31, 0x00	; 0
 886:	80 81       	ld	r24, Z
 888:	28 2f       	mov	r18, r24
 88a:	30 e0       	ldi	r19, 0x00	; 0
 88c:	8b 81       	ldd	r24, Y+3	; 0x03
 88e:	88 2f       	mov	r24, r24
 890:	90 e0       	ldi	r25, 0x00	; 0
 892:	a9 01       	movw	r20, r18
 894:	02 c0       	rjmp	.+4      	; 0x89a <DIO_enuGetPinValue+0x96>
 896:	55 95       	asr	r21
 898:	47 95       	ror	r20
 89a:	8a 95       	dec	r24
 89c:	e2 f7       	brpl	.-8      	; 0x896 <DIO_enuGetPinValue+0x92>
 89e:	ca 01       	movw	r24, r20
 8a0:	81 70       	andi	r24, 0x01	; 1
 8a2:	ec 81       	ldd	r30, Y+4	; 0x04
 8a4:	fd 81       	ldd	r31, Y+5	; 0x05
 8a6:	80 83       	st	Z, r24
 8a8:	41 c0       	rjmp	.+130    	; 0x92c <DIO_enuGetPinValue+0x128>
						 break;
					 case DIO_PORTB:
						 *Copy_pu8Value=(PINB>>Copy_u8PinID)&OUTPUT;
 8aa:	e6 e3       	ldi	r30, 0x36	; 54
 8ac:	f0 e0       	ldi	r31, 0x00	; 0
 8ae:	80 81       	ld	r24, Z
 8b0:	28 2f       	mov	r18, r24
 8b2:	30 e0       	ldi	r19, 0x00	; 0
 8b4:	8b 81       	ldd	r24, Y+3	; 0x03
 8b6:	88 2f       	mov	r24, r24
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	a9 01       	movw	r20, r18
 8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <DIO_enuGetPinValue+0xbe>
 8be:	55 95       	asr	r21
 8c0:	47 95       	ror	r20
 8c2:	8a 95       	dec	r24
 8c4:	e2 f7       	brpl	.-8      	; 0x8be <DIO_enuGetPinValue+0xba>
 8c6:	ca 01       	movw	r24, r20
 8c8:	81 70       	andi	r24, 0x01	; 1
 8ca:	ec 81       	ldd	r30, Y+4	; 0x04
 8cc:	fd 81       	ldd	r31, Y+5	; 0x05
 8ce:	80 83       	st	Z, r24
 8d0:	2d c0       	rjmp	.+90     	; 0x92c <DIO_enuGetPinValue+0x128>
								 break;
					 case DIO_PORTC:
						 *Copy_pu8Value=(PINC>>Copy_u8PinID)&OUTPUT;
 8d2:	e3 e3       	ldi	r30, 0x33	; 51
 8d4:	f0 e0       	ldi	r31, 0x00	; 0
 8d6:	80 81       	ld	r24, Z
 8d8:	28 2f       	mov	r18, r24
 8da:	30 e0       	ldi	r19, 0x00	; 0
 8dc:	8b 81       	ldd	r24, Y+3	; 0x03
 8de:	88 2f       	mov	r24, r24
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	a9 01       	movw	r20, r18
 8e4:	02 c0       	rjmp	.+4      	; 0x8ea <DIO_enuGetPinValue+0xe6>
 8e6:	55 95       	asr	r21
 8e8:	47 95       	ror	r20
 8ea:	8a 95       	dec	r24
 8ec:	e2 f7       	brpl	.-8      	; 0x8e6 <DIO_enuGetPinValue+0xe2>
 8ee:	ca 01       	movw	r24, r20
 8f0:	81 70       	andi	r24, 0x01	; 1
 8f2:	ec 81       	ldd	r30, Y+4	; 0x04
 8f4:	fd 81       	ldd	r31, Y+5	; 0x05
 8f6:	80 83       	st	Z, r24
 8f8:	19 c0       	rjmp	.+50     	; 0x92c <DIO_enuGetPinValue+0x128>
								 break;
					 case DIO_PORTD:
					 *Copy_pu8Value=(PIND>>Copy_u8PinID)&OUTPUT;
 8fa:	e0 e3       	ldi	r30, 0x30	; 48
 8fc:	f0 e0       	ldi	r31, 0x00	; 0
 8fe:	80 81       	ld	r24, Z
 900:	28 2f       	mov	r18, r24
 902:	30 e0       	ldi	r19, 0x00	; 0
 904:	8b 81       	ldd	r24, Y+3	; 0x03
 906:	88 2f       	mov	r24, r24
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	a9 01       	movw	r20, r18
 90c:	02 c0       	rjmp	.+4      	; 0x912 <DIO_enuGetPinValue+0x10e>
 90e:	55 95       	asr	r21
 910:	47 95       	ror	r20
 912:	8a 95       	dec	r24
 914:	e2 f7       	brpl	.-8      	; 0x90e <DIO_enuGetPinValue+0x10a>
 916:	ca 01       	movw	r24, r20
 918:	81 70       	andi	r24, 0x01	; 1
 91a:	ec 81       	ldd	r30, Y+4	; 0x04
 91c:	fd 81       	ldd	r31, Y+5	; 0x05
 91e:	80 83       	st	Z, r24
 920:	05 c0       	rjmp	.+10     	; 0x92c <DIO_enuGetPinValue+0x128>

				}

				else
					{
					local_enuerror = ES_OUT_OF_RANGE;
 922:	83 e0       	ldi	r24, 0x03	; 3
 924:	89 83       	std	Y+1, r24	; 0x01
 926:	02 c0       	rjmp	.+4      	; 0x92c <DIO_enuGetPinValue+0x128>
					}
		}
		else{
			local_enuerror = ES_NULLPOINTER;
 928:	82 e0       	ldi	r24, 0x02	; 2
 92a:	89 83       	std	Y+1, r24	; 0x01
		}

	return local_enuerror;
 92c:	89 81       	ldd	r24, Y+1	; 0x01

}
 92e:	27 96       	adiw	r28, 0x07	; 7
 930:	0f b6       	in	r0, 0x3f	; 63
 932:	f8 94       	cli
 934:	de bf       	out	0x3e, r29	; 62
 936:	0f be       	out	0x3f, r0	; 63
 938:	cd bf       	out	0x3d, r28	; 61
 93a:	cf 91       	pop	r28
 93c:	df 91       	pop	r29
 93e:	08 95       	ret

00000940 <main>:
#include "stdTypes.h"
#include "errorStates.h"
#include "DIO_int.h"
//#include <util/delay.h>
int main(void){
 940:	df 93       	push	r29
 942:	cf 93       	push	r28
 944:	00 d0       	rcall	.+0      	; 0x946 <main+0x6>
 946:	cd b7       	in	r28, 0x3d	; 61
 948:	de b7       	in	r29, 0x3e	; 62
	DIO_enuint();
 94a:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_enuint>
	DIO_enuSetPinValue(D_u8PORTA , D_u8PIN0 ,0);
 94e:	80 e0       	ldi	r24, 0x00	; 0
 950:	60 e0       	ldi	r22, 0x00	; 0
 952:	40 e0       	ldi	r20, 0x00	; 0
 954:	0e 94 8d 02 	call	0x51a	; 0x51a <DIO_enuSetPinValue>
	DIO_enuSetPinValue(D_u8PORTB , D_u8PIN0 ,1);
 958:	81 e0       	ldi	r24, 0x01	; 1
 95a:	60 e0       	ldi	r22, 0x00	; 0
 95c:	41 e0       	ldi	r20, 0x01	; 1
 95e:	0e 94 8d 02 	call	0x51a	; 0x51a <DIO_enuSetPinValue>
	    u8  Copy_pu8Value=20;
 962:	84 e1       	ldi	r24, 0x14	; 20
 964:	8a 83       	std	Y+2, r24	; 0x02


	while(1){
		ES_t PIN_state=DIO_enuGetPinValue(D_u8PORTB , D_u8PIN0,  &Copy_pu8Value );
 966:	9e 01       	movw	r18, r28
 968:	2e 5f       	subi	r18, 0xFE	; 254
 96a:	3f 4f       	sbci	r19, 0xFF	; 255
 96c:	81 e0       	ldi	r24, 0x01	; 1
 96e:	60 e0       	ldi	r22, 0x00	; 0
 970:	a9 01       	movw	r20, r18
 972:	0e 94 02 04 	call	0x804	; 0x804 <DIO_enuGetPinValue>
 976:	89 83       	std	Y+1, r24	; 0x01
	if(	PIN_state==ES_OK){
 978:	89 81       	ldd	r24, Y+1	; 0x01
 97a:	81 30       	cpi	r24, 0x01	; 1
 97c:	a1 f7       	brne	.-24     	; 0x966 <main+0x26>
		if((Copy_pu8Value)==0){
 97e:	8a 81       	ldd	r24, Y+2	; 0x02
 980:	88 23       	and	r24, r24
 982:	31 f4       	brne	.+12     	; 0x990 <main+0x50>
		DIO_enuSetPinValue(D_u8PORTA , D_u8PIN0,1);
 984:	80 e0       	ldi	r24, 0x00	; 0
 986:	60 e0       	ldi	r22, 0x00	; 0
 988:	41 e0       	ldi	r20, 0x01	; 1
 98a:	0e 94 8d 02 	call	0x51a	; 0x51a <DIO_enuSetPinValue>
 98e:	eb cf       	rjmp	.-42     	; 0x966 <main+0x26>
		}
		else{
		DIO_enuSetPinValue(D_u8PORTA, D_u8PIN0 ,0);
 990:	80 e0       	ldi	r24, 0x00	; 0
 992:	60 e0       	ldi	r22, 0x00	; 0
 994:	40 e0       	ldi	r20, 0x00	; 0
 996:	0e 94 8d 02 	call	0x51a	; 0x51a <DIO_enuSetPinValue>
 99a:	e5 cf       	rjmp	.-54     	; 0x966 <main+0x26>

0000099c <_exit>:
 99c:	f8 94       	cli

0000099e <__stop_program>:
 99e:	ff cf       	rjmp	.-2      	; 0x99e <__stop_program>
